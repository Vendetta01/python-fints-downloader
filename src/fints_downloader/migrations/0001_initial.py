# Generated by Django 3.1.1 on 2020-09-23 05:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.CharField(help_text='ID containing the hashed business key', max_length=64, primary_key=True, serialize=False)),
                ('bk_id', models.CharField(help_text='Unhashed business key', max_length=1024)),
                ('last_update', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('iban', models.CharField(blank=True, help_text='IBAN', max_length=34, null=True)),
                ('number', models.DecimalField(blank=True, decimal_places=0, help_text='Account number', max_digits=30, null=True)),
                ('type', models.CharField(choices=[('ch', 'checking'), ('cc', 'credit card'), ('dp', 'depot'), ('fg', 'foreign')], help_text='Type of account', max_length=2)),
                ('name', models.CharField(blank=True, help_text='Account name', max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.CharField(help_text='ID containing the hashed business key', max_length=64, primary_key=True, serialize=False)),
                ('bk_id', models.CharField(help_text='Unhashed business key', max_length=1024)),
                ('last_update', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('name', models.CharField(blank=True, help_text='Name of the bank', max_length=512, null=True)),
                ('bic', models.CharField(blank=True, help_text='Bank identifier code', max_length=11, null=True)),
                ('code', models.DecimalField(blank=True, decimal_places=0, help_text='German bank code', max_digits=8, null=True)),
                ('server', models.CharField(blank=True, help_text='Bank fints server connection string', max_length=1024, null=True)),
            ],
            options={
                'unique_together': {('bic', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.CharField(help_text='ID containing the hashed business key', max_length=64, primary_key=True, serialize=False)),
                ('bk_id', models.CharField(help_text='Unhashed business key', max_length=1024)),
                ('last_update', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=32)),
                ('currency', models.CharField(choices=[('EUR', 'Euro')], help_text='Currency type', max_length=3)),
                ('date', models.DateField(help_text='Date of transaction')),
                ('posting_text', models.CharField(blank=True, help_text='Posting text of transaction', max_length=128, null=True)),
                ('purpose', models.CharField(blank=True, help_text='Purpose of transaction', max_length=1024, null=True)),
                ('transaction_code', models.DecimalField(blank=True, decimal_places=0, help_text='Transaction code', max_digits=30, null=True)),
                ('dst', models.ForeignKey(help_text='Destination account', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dst', to='fints_downloader.account')),
                ('src', models.ForeignKey(help_text='Source account', on_delete=django.db.models.deletion.CASCADE, related_name='src', to='fints_downloader.account')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoginCredentials',
            fields=[
                ('id', models.CharField(help_text='ID containing the hashed business key', max_length=64, primary_key=True, serialize=False)),
                ('bk_id', models.CharField(help_text='Unhashed business key', max_length=1024)),
                ('last_update', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('name', models.CharField(help_text='Login/user name', max_length=1024)),
                ('password', models.CharField(help_text='Password or pin for this account', max_length=1024)),
                ('tan_mechanism', models.CharField(blank=True, help_text='Default TAN mechanism', max_length=3, null=True)),
                ('tan_required', models.BooleanField(default=False, help_text='Did the last access required a TAN? Should not be set directly.')),
                ('bank', models.ForeignKey(help_text='Login credentials are for this bank', on_delete=django.db.models.deletion.CASCADE, to='fints_downloader.bank')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.CharField(help_text='ID containing the hashed business key', max_length=64, primary_key=True, serialize=False)),
                ('bk_id', models.CharField(help_text='Unhashed business key', max_length=1024)),
                ('last_update', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('isin', models.TextField(help_text='ISIN', max_length=12)),
                ('wkn', models.TextField(help_text='German Wertpapierkennnummer', max_length=6)),
                ('name', models.TextField(help_text='Name', max_length=256)),
                ('market_value', models.DecimalField(decimal_places=2, help_text='Market value', max_digits=32)),
                ('currency', models.CharField(choices=[('EUR', 'Euro')], help_text='Currency type', max_length=3)),
                ('valuation_date', models.DateField(help_text='Valuation date')),
                ('pieces', models.PositiveIntegerField(help_text='Number of pieces')),
                ('total_value', models.DecimalField(decimal_places=2, help_text='Total value', max_digits=32)),
                ('acquisitionprice', models.DecimalField(blank=True, decimal_places=2, help_text='Acquisition price', max_digits=32, null=True)),
                ('account', models.ForeignKey(help_text='Account which the holding belongs to', on_delete=django.db.models.deletion.CASCADE, to='fints_downloader.account')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.CharField(help_text='ID containing the hashed business key', max_length=64, primary_key=True, serialize=False)),
                ('bk_id', models.CharField(help_text='Unhashed business key', max_length=1024)),
                ('last_update', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Account balance', max_digits=32)),
                ('currency', models.CharField(choices=[('EUR', 'Euro')], help_text='Currency type', max_length=3)),
                ('valid_datetime', models.DateTimeField(help_text='Timestamp at which this balance was valid')),
                ('account', models.ForeignKey(help_text='Account which the balance belongs to', on_delete=django.db.models.deletion.CASCADE, to='fints_downloader.account')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='account',
            name='bank',
            field=models.ForeignKey(blank=True, help_text='Bank this account belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, to='fints_downloader.bank'),
        ),
        migrations.AddField(
            model_name='account',
            name='login_credentials',
            field=models.ForeignKey(blank=True, help_text='Login credentials used for this account', null=True, on_delete=django.db.models.deletion.CASCADE, to='fints_downloader.logincredentials'),
        ),
        migrations.AddConstraint(
            model_name='account',
            constraint=models.CheckConstraint(check=models.Q(('iban__isnull', False), ('number__isnull', False), _connector='OR'), name='not_both_null'),
        ),
    ]
